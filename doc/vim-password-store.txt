*vim-password-store* Niceties for editing password-store files

===============================================================================
CONTENTS                                              *password-store-contents*

    1. Intro ........................................... |password-store-intro|
    2. Requirements ............................. |password-store-requirements|
    3. Usage ........................................... |password-store-usage|
    4. Configuration .................................. |password-store-config|
    5. Licence ....................................... |password-store-licence|
    6. Credits ....................................... |password-store-credits|
===============================================================================
1. Intro                                                 *password-store-intro*

Password store is a nice command line password manager, well suited to
vim's style. Tom Ryder has written a plugin to unset the standard
password security leakages, backup files, info files etc. This works
well, but doesn't provide hooks for extending. I wanted to add a few
simple enhancements, including unsetting spelling (no password should be
spell checked :-) and some simple syntax highlighting.

2. Requirements                                   *password-store-requirements*

A plugin manager (not required but the plugin is written to expect
this) and password-store https://www.passwordstore.org/ .

3. Usage                                                 *password-store-usage*

The plugin automatically loads when it sees the appropriate file paths
for password-store. This is Tom Ryders 

There are two functions:
>
  :Conceal
  :Reveal
<
That apply syntax highlighting to obscure and un-obscure the password.
By default the pass file loads in obscured mode, however when the cursor is on
the word it should readable and editable. This offers minor "shoulder surfing"
protection, facilitating editing of metadata, such as adding URLs etc.

There's minor feedback for short passwords, with Error highlighting for
passwords 6 or less characters long.

Password store also adds password generation support via pwgen. Since
password-store already leverages pwgen, this is a fairly safe assumption.
There is a Plug mapping *<Plug>rotate_password*
by default this is mapped to <C-X> and <C-A> but can be overridden via setting
an alternate plug mapping
>
  nnoremap >M-a> <Plug>rotate_password
<
The mapped sequence will generate a random password. As neither decrement nor
increment mean anything in this context, buth are mapped to the same plug.
The default length of the password is 10 character, but
modifiable by configuration This is also available via the function call(s)
>
   password_store#replace()
<
4. Configuration                                       *password-store-config*

Configuration is done through a global dictionary *g:password_store_settings*
Initialize the dictionary and add settings as needed
>
    let g:password_store_settings = {}

Syntax obfustaction is enabled by default. To disable it:
>
    let g:password_store_settings.enable_syntax = 'false"


Auto "increment" password length is 12 characters. To change it
>
  let g:password_store_settings.pw_length = 20
<
4. Licence                                            *password-store-licence*

This plugin is licensed under the same terms as vim itself (see
|license| )

5. Credits                                            *password-store-credits*

Tom Ryder
https://git.zx2c4.com/password-store/

vim:ft=help
